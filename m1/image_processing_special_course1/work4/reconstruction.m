% Moodleの「3次元復元」のページから
% xx1とxx2の配列データを以下にコピーペーストせよ

xx1 = [-0.30623, 0.623878; -0.078802, 0.178331; -0.267014, -0.420676; -0.932677, -0.256612; -0.758762, 0.40612; -0.30623, 0.623878; -0.224509, 0.412484; -0.089326, 0.149664; -0.205494, -0.220182; -0.600524, -0.111333; -0.489092, 0.281824; -0.224509, 0.412484; -0.089326, 0.149664; -0.078802, 0.178331; -0.267014, -0.420676; -0.205494, -0.220182; -0.600524, -0.111333; -0.932677, -0.256612; -0.758762, 0.40612; -0.489092, 0.281824];
xx2 = [0.235483, 0.234391; 0.173542, 0.027176; 0.273821, -0.309805; 0.44765, -0.169485; 0.370111, 0.111923; 0.235483, 0.234391; 0.59231, 0.369147; 0.550009, 0.092539; 0.672435, -0.381688; 0.810211, -0.181899; 0.72161, 0.189162; 0.59231, 0.369147; 0.550009, 0.092539; 0.173542, 0.027176; 0.273821, -0.309805; 0.672435, -0.381688; 0.810211, -0.181899; 0.44765, -0.169485; 0.370111, 0.111923; 0.72161, 0.189162];

% 画像の表示
subplot(3,2,1); plot(xx1(:,1),xx1(:,2),'r'); hold on;  
plot(xx1(:,1),xx1(:,2),'ro'); hold off; axis([-1,1,-1,1]);
subplot(3,2,2); plot(xx2(:,1),xx2(:,2),'g'); hold on;  
plot(xx2(:,1),xx2(:,2),'go'); hold off; axis([-1,1,-1,1]);

% 以下に前回の演習で作成したエピポーラ幾何と運動復元のプログラムをコピーペーストせよ

%calculation F matrix
M = zeros(20,9);
for i = 1:20
    x1 = xx1(i,1);
    y1 = xx1(i,2);
    x2 = xx2(i,1);
    y2 = xx2(i,2);
    M(i,:) = [x1*x2, y1*x2, x2, x1*y2, y1*y2, y2, x1, y1, 1];
end;
[v,d] = eig(M'*M);
f = v(:,1);
F = [f(1:3)';f(4:6)';f(7:9)'];

%calculation R,T
[R1,R2,T1,T2] = compRT(F);

%calculation e
[v1,d1] = eig(F'*F);
e1h = v1(:,1);
e1 = [e1h(1),e1h(2)]/e1h(3);
[v2,d2] = eig(F*F');
e2h = v2(:,1);
e2 = [e2h(1),e2h(2)]/e2h(3);

%calculation l
l1h = zeros(3,20);
l2h = zeros(3,20);
for i = 1:20
    l1h(:,i) = F'*[xx2(i,1);xx2(i,2);1];
    l2h(:,i) = F *[xx1(i,1);xx1(i,2);1];
end;


% 画像の表示
figure
subplot(3,2,1); plot(xx1(:,1),xx1(:,2),'r'); hold on;  
plot(xx1(:,1),xx1(:,2),'ro'); plot(e1(1),e1(2),'ro');
for i = 1:20 
    wline(l1h(:,i));
end;
hold off; axis([-1,1,-1,1]);
subplot(3,2,2); plot(xx2(:,1),xx2(:,2),'g'); hold on;
plot(xx2(:,1),xx2(:,2),'go'); plot(e2(1),e2(2),'go');
for i = 1:20 
    wline(l2h(:,i));
end;
hold off; axis([-1,1,-1,1]);

% 以下にユークリッド復元のプログラムを作成せよ

A = [1,0,0;0,1,0;0,0,1];
m1h = A*[xx1,ones(20,1)]';
m2h = A*[xx2,ones(20,1)]';
P0 = A*[1,0,0,0;0,1,0,0;0,0,1,0];
P1 = A*[R1,T1];
P2 = A*[R1,T2];
P3 = A*[R2,T1];
P4 = A*[R2,T2];
XX1 = zeros(20,3);
XX2 = zeros(20,3);
XX3 = zeros(20,3);
XX4 = zeros(20,3);
for i = 1:20
    m1hi = m1h(:,i);
    m1hcross = [0,-m1hi(3),m1hi(2);m1hi(3),0,-m1hi(1);-m1hi(2),m1hi(1),0];
    Q1 = m1hcross*P0;

    m2hi = m2h(:,i);
    m2hcross = [0,-m2hi(3),m2hi(2);m2hi(3),0,-m2hi(1);-m2hi(2),m2hi(1),0];

    Q2 = m2hcross*P1;
    M = [Q1;Q2];
    [v,d] = eig(M'*M);
    XX1hi = v(:,1);
    XX1(i,:) = XX1hi(1:3)'/XX1hi(4);

    Q2 = m2hcross*P2;
    M = [Q1;Q2];
    [v,d] = eig(M'*M);
    XX2hi = v(:,1);
    XX2(i,:) = XX2hi(1:3)'/XX2hi(4);

    Q2 = m2hcross*P3;
    M = [Q1;Q2];
    [v,d] = eig(M'*M);
    XX3hi = v(:,1);
    XX3(i,:) = XX3hi(1:3)'/XX3hi(4);

    Q2 = m2hcross*P4;
    M = [Q1;Q2];
    [v,d] = eig(M'*M);
    XX4hi = v(:,1);
    XX4(i,:) = XX4hi(1:3)'/XX4hi(4);
    
end;
subplot(3,2,3);
plot3(XX1(:,1), XX1(:,2), XX1(:,3),'b');
subplot(3,2,4);
plot3(XX2(:,1), XX2(:,2), XX2(:,3),'b');
subplot(3,2,5);
plot3(XX3(:,1), XX3(:,2), XX3(:,3),'b');
subplot(3,2,6);
plot3(XX4(:,1), XX4(:,2), XX4(:,3),'b');

VV = XX4(3,:) - XX4(4,:);
XX = round(XX4 / sqrt(VV*VV'), 2);